name: Manage GitHub Environment

on:
  workflow_call:
    inputs:
      environment_name:
        type: string
        description: "The name of the GitHub environment to manage"
      operation:
        type: string
        description: "The operation to perform on the GitHub environment. Can be one of `create`, `delete`"
        required: true
      base_domain_name:
        type: string
        default: "gke.test.epam-rail.com"
        description: "The base domain for environment deployments"
      environment_url:
        type: string
        description: "Overrides the environment URL, completely bypassing concatenation logic. Must follow RFC 3986"
      reviewers:
        type: string
        default: '[{"type": "User", "id": 20123880},{"type": "User", "id": 189285490}]' # TODO: change to epam/dial-contributors user group
        description: "A JSON-encoded list of user IDs or user-group IDs that will be designated as reviewers for the GitHub environment"
        required: false
      post_comments:
        type: boolean
        description: "Post comments to PR with details"
        default: true
        required: false
      runs-on:
        type: string
        default: '["ubuntu-latest"]'
        description: "Overrides job runs-on settings (json-encoded list)"
        required: false
    secrets:
      ACTIONS_BOT_TOKEN:
        description: "GitHub token to perform actions on the GitHub environment"
        required: true
    outputs:
      environment_name:
        description: "The environment name"
        value: ${{ jobs.transformer.outputs.environment_name }}
      environment_url:
        description: "The environment URL"
        value: ${{ jobs.transformer.outputs.environment_url }}

jobs:

  transformer:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    outputs:
      environment_name: ${{ steps.settings.outputs.environment_name }}
      environment_url: ${{ steps.settings.outputs.environment_url }}
    steps:
      - name: Update environment settings
        id: settings
        env:
          INPUT_ENVIRONMENT_NAME: ${{ inputs.environment_name }}
          INPUT_BASE_DOMAIN_NAME: ${{ inputs.base_domain_name }}
          INPUT_PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [ -n "$INPUT_ENVIRONMENT_NAME" ]; then
            environment_name=$INPUT_ENVIRONMENT_NAME
          elif [[ "$GITHUB_EVENT_NAME" == "pull_request" ]] || [[ "$GITHUB_EVENT_NAME" == "pull_request_target" ]]; then
            environment_name="pr-${INPUT_PR_NUMBER}"
          else
            environment_name=${GITHUB_SHA:0:7}
          fi

          repository_name=${GITHUB_REPOSITORY#*/}
          environment_url="${repository_name}-${environment_name}.${INPUT_BASE_DOMAIN_NAME}"

          echo "Environment name: ${environment_name}"
          echo "Repository name: ${repository_name}"
          echo "Base domain name: ${INPUT_BASE_DOMAIN_NAME}" # TODO: remove this after debug
          echo "Environment URL: ${environment_url}"

          echo "## Outputs"
          echo "| Property            | Value                        |" >>$GITHUB_STEP_SUMMARY
          echo "|---------------------|------------------------------|" >>$GITHUB_STEP_SUMMARY
          echo "| Environment name    | ${environment_name}          |" >>$GITHUB_STEP_SUMMARY
          echo "| Repository name     | ${repository_name}           |" >>$GITHUB_STEP_SUMMARY
          echo "| Environment URL     | ${environment_url}           |" >>$GITHUB_STEP_SUMMARY

          echo "environment_name=${environment_name}" >>$GITHUB_OUTPUT
          echo "environment_url=${environment_url}" >>$GITHUB_OUTPUT

  create_or_update_environment:
    if: ${{ inputs.operation == 'create' }}
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    needs:
      - transformer
    env:
      GITHUB_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}
      INPUT_REVIEWERS: ${{ inputs.reviewers }}
      INPUT_ENVIRONMENT_NAME: ${{ needs.transformer.outputs.environment_name }}
    steps:
      - name: Create or update an environment
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            await github.request('PUT /repos/{owner}/{repo}/environments/{environment_name}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment_name: process.env.INPUT_ENVIRONMENT_NAME,
              wait_timer: 0,
              prevent_self_review: true,
              reviewers: JSON.parse(process.env.INPUT_REVIEWERS),
              deployment_branch_policy: {
                protected_branches: false,
                custom_branch_policies: true
              },
              headers: {
                'X-GitHub-Api-Version': '2022-11-28',
                'Accept': 'application/vnd.github+json'
              }
            });
      - name: Post a comment
        if: ${{ inputs.post_comments }}
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
        with:
          header: gh_environment
          message: |
            > [!NOTE]
            >**Your request for a review environment is awaiting approval from a maintainer.**
            > Once a maintainer approves your request, the deployment will automatically initiate. Thank you for being so patient!
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

  check_approve:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    needs:
      - transformer
    concurrency:
      group: ${{ needs.transformer.outputs.environment_name }}
      cancel-in-progress: true
    environment:
      name: ${{ needs.transformer.outputs.environment_name }}
      url: ${{ needs.transformer.outputs.environment_url }}
    steps:
      - run: |
          echo "Waiting for approve"
